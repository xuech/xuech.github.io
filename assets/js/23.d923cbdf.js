(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{505:function(t,s,a){t.exports=a.p+"assets/img/7.1.7aaf98aa.gif"},564:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey},scopedSlots:t._u([{key:"header",fn:function(){return[n("h2",{attrs:{id:"javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")])]},proxy:!0}])},[n("h2",{attrs:{id:"一、执行上下文-execution-context"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、执行上下文-execution-context"}},[t._v("#")]),t._v(" 一、执行上下文（Execution Context）")]),t._v(" "),n("h3",{attrs:{id:"_1-什么是执行上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是执行上下文"}},[t._v("#")]),t._v(" 1. 什么是执行上下文")]),t._v(" "),n("blockquote",[n("p",[t._v("当前 "),n("code",[t._v("JavaScript")]),t._v(" 代码被解析和执行时所在环境的抽象概念， "),n("code",[t._v("JavaScript")]),t._v(" 中运行的所有代码都是在执行上下文中运行")])]),t._v(" "),n("h3",{attrs:{id:"_2-执行上下文的类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行上下文的类型"}},[t._v("#")]),t._v(" 2. 执行上下文的类型")]),t._v(" "),n("ul",[n("li",[t._v("全局执行上下文： 默认的、最基础的执行上下文。")]),t._v(" "),n("li",[t._v("函数执行上下文：每次调用函数时，都会创建一个新的执行上下文。")]),t._v(" "),n("li",[t._v("Eval函数执行上下文：运行在 eval 函数中的代码也获得了自己的执行上下文【不常用】")])]),t._v(" "),n("h2",{attrs:{id:"二、执行上下文的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、执行上下文的生命周期"}},[t._v("#")]),t._v(" 二、执行上下文的生命周期")]),t._v(" "),n("h3",{attrs:{id:"_1-创建阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建阶段"}},[t._v("#")]),t._v(" 1. 创建阶段")]),t._v(" "),n("p",[n("strong",[t._v("函数被调用，但未执行内部代码之前，会做以下三件事")])]),t._v(" "),n("ul",[n("li",[t._v("创建变量对象(VO)：形参赋值，提升函数声明和变量声明")]),t._v(" "),n("li",[t._v("创建作用域链(Scope)：作用域链是在变量对象之后创建的")]),t._v(" "),n("li",[t._v("确定this指向："),n("RouterLink",{attrs:{to:"/guide/js/4.html"}},[t._v("第四篇")])],1)]),t._v(" "),n("h3",{attrs:{id:"_2-执行阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行阶段"}},[t._v("#")]),t._v(" 2. 执行阶段")]),t._v(" "),n("p",[t._v("执行变量赋值、代码执行")]),t._v(" "),n("h3",{attrs:{id:"_3-回收阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-回收阶段"}},[t._v("#")]),t._v(" 3. 回收阶段")]),t._v(" "),n("p",[t._v("执行上下文出栈等待虚拟机回收执行上下文")]),t._v(" "),n("h2",{attrs:{id:"三、变量声明提升和函数声明提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、变量声明提升和函数声明提升"}},[t._v("#")]),t._v(" 三、变量声明提升和函数声明提升")]),t._v(" "),n("blockquote",[n("p",[t._v("当遇到函数和变量同名且都会被提升的情况，函数声明优先级比较高，因此变量声明会被函数声明所覆盖，但是可以重新赋值。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 1. 形参 arg 是 "hi"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 因为函数声明比变量声明优先级高，所以此时 arg 是 function")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.var arg 变量声明被忽略， arg = 'hello'被执行")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 输出：\nfunction arg(){\n  console.log('hello world') \n}\nhello \n*/")]),t._v("\n")])])]),n("ul",[n("li",[t._v("test函数执行，形成一个新的私有作用域")]),t._v(" "),n("li",[t._v("如果有形参，先给形参赋值")]),t._v(" "),n("li",[t._v("私有作用域中开始预解释，函数声明优先级比变量声明高，最后后者会被前者所覆盖，但是可以重新赋值")]),t._v(" "),n("li",[t._v("私有作用域中的代码从上到下执行")])]),t._v(" "),n("h2",{attrs:{id:"四、执行上下文栈-execution-context-stack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、执行上下文栈-execution-context-stack"}},[t._v("#")]),t._v(" 四、执行上下文栈（Execution Context Stack）")]),t._v(" "),n("p",[n("code",[t._v("JavaScript")]),t._v(" 引擎创建了"),n("strong",[t._v("执行上下文栈")]),t._v("来管理执行上下文。可以把执行上下文栈认为是一个存储函数调用的栈结构，遵循先进后出的原则。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(505),alt:"7.1"}})]),t._v(" "),n("ul",[n("li",[t._v("JavaScript执行在单线程上，所有的代码都是排队执行。")]),t._v(" "),n("li",[t._v("一开始浏览器执行全局的代码时，首先创建全局的执行上下文，压入执行栈的顶部。")]),t._v(" "),n("li",[t._v("每当进入一个函数的执行就会创建函数的执行上下文，并且把它压入执行栈的顶部。当前函数执行完成后，当前函数的执行上下文出栈，并等待垃圾回收。")]),t._v(" "),n("li",[t._v("浏览器的JS执行引擎总是访问栈顶的执行上下文。")]),t._v(" "),n("li",[t._v("全局上下文只有唯一的一个，它在浏览器关闭时出栈。")])]),t._v(" "),n("p",[t._v("我们以下面的代码来解释执行上下文及执行上下文栈的关系变化：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" scope "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global scope"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" scope "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local scope"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" scope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ol",[n("li",[t._v("执行全局代码，创建全局执行上下文，并被压入执行上下文栈： "),n("code",[t._v("ECStack = [ globalContext]")])]),t._v(" "),n("li",[t._v("全局上下文初始化：")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("globalContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("globalContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" globalContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("初始化的同时，Fn 函数被创建，保存作用域链到函数的内部属性[[scope]]: "),n("code",[t._v("Fn.[[scope]] = [globalContext.VO]")])]),t._v(" "),n("li",[t._v("执行Fn函数，创建Fn函数执行上下文，Fn函数执行上下文被压入上下文栈：\n"),n("code",[t._v("ECStack = [FnContext, globalContext]")])]),t._v(" "),n("li",[t._v("Fn 函数执行上下文初始化：\n"),n("ol",[n("li",[t._v("复制函数 [[scope]] 属性创建作用域链，")]),t._v(" "),n("li",[t._v("用 arguments 创建活动对象，")]),t._v(" "),n("li",[t._v("初始化活动对象，即加入形参、函数声明、变量声明，")]),t._v(" "),n("li",[t._v("将活动对象压入 Fn 作用域链顶端。\n同时 f 函数被创建，保存作用域链到 f 函数的内部属性[[scope]]")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("FnContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            arguments"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                length"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            f"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" reference to "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" globalContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"6"}},[n("li",[t._v("执行 f 函数，创建 f 函数执行上下文，f 函数执行上下文被压入执行上下文栈")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("ECStack "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    fContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    FnContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    globalContext\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ol",{attrs:{start:"7"}},[n("li",[t._v("f 函数执行上下文初始化, 以下跟第 5 步相同：\n"),n("ol",[n("li",[t._v("复制函数 [[scope]] 属性创建作用域链")]),t._v(" "),n("li",[t._v("用 arguments 创建活动对象")]),t._v(" "),n("li",[t._v("初始化活动对象，即加入形参、函数声明、变量声明")]),t._v(" "),n("li",[t._v("将活动对象压入 f 作用域链顶端")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("fContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        arguments"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            length"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FnContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" globalContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"8"}},[n("li",[t._v("f 函数执行，沿着作用域链查找 scope 值，返回 scope 值")]),t._v(" "),n("li",[t._v("f 函数执行完毕，f 函数上下文从执行上下文栈中弹出")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("ECStack "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    FnContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    globalContext\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ol",{attrs:{start:"10"}},[n("li",[t._v("Fn 函数执行完毕，Fn 执行上下文从执行上下文栈中弹出")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("ECStack "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    globalContext\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/8",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考：冴羽"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/ljianshu/Blog/issues/60",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考：jsl"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);