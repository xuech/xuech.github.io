(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{577:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("p",[t._v("webpack 在编译代码过程中，会触发一系列Tapable钩子函数，插件所要做的就是在合适的时机将要修改的内容注入到相应的钩子函数中去，有点类似"),s("code",[t._v("Object.definePropety")]),t._v("的属性拦截")]),t._v(" "),s("h2",{attrs:{id:"webpack-的内部执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-的内部执行流程"}},[t._v("#")]),t._v(" webpack 的内部执行流程")]),t._v(" "),s("p",[t._v("一次完整的 "),s("code",[t._v("webpack")]),t._v(" 打包大致是这样的过程：")]),t._v(" "),s("ul",[s("li",[t._v("将命令行参数与 "),s("code",[t._v("webpack")]),t._v(" 配置文件 合并、解析得到参数对象。")]),t._v(" "),s("li",[t._v("参数对象传给 "),s("code",[t._v("webpack")]),t._v(" 执行得到 "),s("code",[t._v("Compiler")]),t._v(" 对象。")]),t._v(" "),s("li",[t._v("执行 "),s("code",[t._v("Compiler")]),t._v(" 的 run方法开始编译。每次执行 "),s("code",[t._v("run")]),t._v(" 编译都会生成一个 "),s("code",[t._v("Compilation")]),t._v(" 对象。")]),t._v(" "),s("li",[t._v("触发 "),s("code",[t._v("Compiler")]),t._v(" 的 make方法分析入口文件，调用 "),s("code",[t._v("compilation")]),t._v(" 的 "),s("code",[t._v("buildModule")]),t._v(" 方法创建主模块对象。")]),t._v(" "),s("li",[t._v("生成入口文件 AST(抽象语法树)，通过 AST 分析和递归加载依赖模块。")]),t._v(" "),s("li",[t._v("所有模块分析完成后，执行 "),s("code",[t._v("compilation")]),t._v(" 的 "),s("code",[t._v("seal")]),t._v(" 方法对每个 "),s("code",[t._v("chunk")]),t._v(" 进行整理、优化、封装。")]),t._v(" "),s("li",[t._v("最后执行 "),s("code",[t._v("Compiler")]),t._v(" 的 "),s("code",[t._v("emitAssets")]),t._v(" 方法把生成的文件输出到 "),s("code",[t._v("output")]),t._v(" 的目录中。\n"),s("a",{attrs:{href:"imgs/2.png"}},[t._v("2")])])]),t._v(" "),s("h2",{attrs:{id:"webpack-内部的一些钩子-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-内部的一些钩子-事件"}},[t._v("#")]),t._v(" webpack 内部的一些钩子(事件)")]),t._v(" "),s("blockquote",[s("p",[t._v("为了方便我们直接介入和控制编译过程，"),s("code",[t._v("webpack")]),t._v("把编译过程中触发的各类关键事件封装成事件接口暴露了出来")])]),t._v(" "),s("h3",{attrs:{id:"tapable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tapable"}},[t._v("#")]),t._v(" Tapable")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Tapable")]),t._v(" 为 "),s("code",[t._v("webpack")]),t._v(" 提供了统一的插件接口（钩子）类型定义，它是 "),s("code",[t._v("webpack")]),t._v(" 的核心功能库")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/webpack/tapable/blob/master/lib/index.js")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SyncHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SyncHook"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SyncBailHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SyncBailHook"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SyncWaterfallHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SyncWaterfallHook"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SyncLoopHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SyncLoopHook"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AsyncParallelHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./AsyncParallelHook"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),s("p",[t._v("Tapable暴露给外界的三个方法")]),t._v(" "),s("ul",[s("li",[t._v("tap：可以注册同步钩子和异步钩子。")]),t._v(" "),s("li",[t._v("tapAsync：回调方式注册异步钩子。")]),t._v(" "),s("li",[t._v("tapPromise：Promise方式注册异步钩子。")])]),t._v(" "),s("h2",{attrs:{id:"自定义插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义插件"}},[t._v("#")]),t._v(" 自定义插件")]),t._v(" "),s("p",[t._v("开发一个每次webpack打包后，自动产生一个打包文件清单，上面要记录文件名、文件数量等信息。\n思路：")]),t._v(" "),s("ul",[s("li",[t._v("我们要注入的方法应该是在生成dist目录之前，所以要在Compiler上的emit函数中")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://champyin.com/2020/01/12/%E6%8F%AD%E7%A7%98webpack-plugin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("1"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);